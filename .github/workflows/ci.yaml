name: CI

on: pull_request

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.5.11
  SQLX_FEATURES: '["postgres", "sqlx/runtime-tokio-rustls"]'

jobs:
  cache-sqlx-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Calculate cache parameters
        id: params
        run: |
          echo '::set-output name=key::${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ join(fromJSON(env.SQLX_FEATURES), '-') }}-v2'
          echo '::set-output name=path::"~/.cargo/bin/cargo-sqlx\n~/.cargo/bin/sqlx"'
      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          key: ${{ steps.params.outputs.key }}
          path: ${{ fromJSON(steps.params.outputs.path) }}
      - uses: actions-rs/toolchain@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Install sqlx-cli
        if: steps.cache-sqlx.outputs.cache-hit == false
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ join(fromJSON(env.SQLX_FEATURES), ',') }}
            --no-default-features
            --locked
    outputs:
      key: ${{ steps.params.outputs.key }}
      path: ${{ fromJSON(steps.params.outputs.path) }}

  test:
    runs-on: ubuntu-latest
    needs: cache-sqlx-cli
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Cache sqlx-cli
        uses: actions/cache@v2
        with:
          key: ${{ needs.cache-sqlx-cli.outputs.key }}
          path: ${{ needs.cache-sqlx-cli.outputs.path }}
      - name: Start database
        run: ./scripts/init_db.sh >> $GITHUB_ENV
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    needs: cache-sqlx-cli
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy
      - name: Cache sqlx-cli
        uses: actions/cache@v2
        with:
          key: ${{ needs.cache-sqlx-cli.outputs.key }}
          path: ${{ needs.cache-sqlx-cli.outputs.path }}
      - name: Start database
        run: ./scripts/init_db.sh >> $GITHUB_ENV
      - name: Check schema sync
        run: cargo sqlx prepare --check -- --lib
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings
      - name: Reject uncommitted changes
        run: |
          git add -N .
          git diff --exit-code || (echo 'uncommitted changes' && exit 1)

  coverage:
    runs-on: ubuntu-latest
    needs: cache-sqlx-cli
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Cache sqlx-cli
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          key: ${{ needs.cache-sqlx-cli.outputs.key }}
          path: ${{ needs.cache-sqlx-cli.outputs.path }}
      - name: Start database
        run: ./scripts/init_db.sh >> $GITHUB_ENV
      - uses: actions-rs/tarpaulin@v0.1
        with:
          args: --ignore-tests
